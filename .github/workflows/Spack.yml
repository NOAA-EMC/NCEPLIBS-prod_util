# This is a CI workflow for the NCEPLIBS-prod_util project.
#
# This workflow builds prod_util with Spack, including installing with the "--test
# root" option to run the CTest suite. It also has a one-off job that validates
# the recipe by ensuring that every CMake option that should be set in the
# Spack recipe is so set.
#
# Edward Hartnett, 10/13/23
name: Spack
on:
  push:
    branches:
    - develop
  pull_request:
    branches:
    - develop

jobs:
  # This job builds with Spack using every combination of variants and runs the CTest suite each time
  Spack:
    strategy:
      matrix:
        os: ["ubuntu-latest"]
    runs-on: ${{ matrix.os }}

    steps:

    - name: checkout-prod_util
      uses: actions/checkout@v4
      with:
        path: prod_util

    - name: spack-build-and-test
      run: |
        git clone -c feature.manyFiles=true https://github.com/spack/spack
        . spack/share/spack/setup-env.sh
        spack env create prod_util-env
        spack env activate prod_util-env
        cp $GITHUB_WORKSPACE/prod_util/spack/package.py $SPACK_ROOT/var/spack/repos/builtin/packages/prod_util/package.py
        spack develop --no-clone --path $GITHUB_WORKSPACE/prod_util prod_util@develop
        spack add prod_util@develop%gcc@11
        spack external find cmake gmake
        spack concretize
        # Run installation and run CTest suite
        spack install --verbose --fail-fast --test root
        # Run 'spack load' to check for obvious errors in setup_run_environment
        spack load prod_util

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: ${{ failure() }}
      with:
        name: spackci-ctest-output-${{ matrix.os }}-${{ matrix.pic }}-${{ matrix.precision }}-${{ matrix.w3emc }}
        path: ${{ github.workspace }}/prod_util/spack-build-*/Testing/Temporary/LastTest.log


  # This job validates the Spack recipe by making sure each cmake build option is represented
  recipe-check:
    runs-on: ubuntu-latest

    steps:

    - name: checkout-prod_util
      uses: actions/checkout@v4
      with:
        path: prod_util

    - name: recipe-check
      run: |
        echo "If this jobs fails, look at the most recently output CMake option below and make sure that option appears in spack/package.py"
        for opt in $(grep -ioP '^option\(\K(?!(ENABLE_DOCS|FTP_TEST_FILES|FTP_LARGE_TEST_FILES|FTP_EXTRA_TEST_FILES|LOGGING|BUILD_SHARED_LIBS))[^ ]+' $GITHUB_WORKSPACE/prod_util/CMakeLists.txt) ; do
          echo "Checking for presence of '$opt' CMake option in package.py"
          grep -cP "define.+\b${opt}\b" $GITHUB_WORKSPACE/prod_util/spack/package.py
        done
